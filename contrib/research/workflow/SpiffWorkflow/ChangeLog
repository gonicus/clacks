2009-01-06 Samuel Abels <http://debain.org>

	* Release 0.3.0.

2008-06-29 Samuel Abels <http://debain.org>

	* src/SpiffWorkflow/Job.py, src/SpiffWorkflow/Tasks/TaskSpec.py: Got rid of 
	useless reference to Trackable.
	* src/SpiffWorkflow/Trackable.py: Removed useless file.
	* Makefile: New, support for dragging dependencies.

2008-06-25 Samuel Abels <http://debain.org>

	* all-over: Rename Tasks.Task to Tasks.TaskSpec. Rename TaskInstance to
	Task. Huge amount of cleanups, better variables names, etc.
	* Tasks/Simple.py: New.

2008-06-22 Samuel Abels <http://debain.org>

	* all-over: Major cleanups/redesign, got gid of a lot of useless code.

2007-09-09 Samuel Abels <http://debain.org>

	* Workflow/Job.py: Added is_completed(), get_waiting_tasks() and
	execute_task_from_id().

2007-09-03 Samuel Abels <http://debain.org>

	* tests/*: Changed tests and directory structure to support testing data
	patterns. Added a test for the Block Data, Task To Task, Block Task To
	Sub-Workflow Decomposition, and Sub-Workflow Decomposition to Block Task
	patterns.
	* Tasks/Task.py, Storage/XmlReader: Support local task data in the form of
	properties (Task Data pattern).

2007-09-02 Samuel Abels <http://debain.org>

	* *.py, Tasks/SubWorkflow.py: Support dynamic loading of sub-workflows. This
	also supports the Recursion pattern.
	* *.py: Support the assignment of attributes in the XML documents.
	* Tasks/Cancel.py: Support Explicit Termination.
	* Tasks/Trigger.py: Support Persistent Trigger.

2007-09-01 Samuel Abels <http://debain.org>

	* tests: Support Interleaved Routing.
	* BranchNode.py, Tasks/*.py: Fixed several bugs related to task cancellation.
	* Tasks/CancelTask.py: Implemented the Cancel Task and Cancel Region
	patterns.
	* Tasks/CancelJob.py: Implemented the Cancel Case pattern.
	* Tasks/Join.py: Support the Cancel Multiple Instance Task and Complete
	Multiple Instance Task patterns.
	* all-over: Use task names instead of task references to address a task, in
	order to relax the strict ordering in which tasks needed to be instanciated.

2007-08-31 Samuel Abels <http://debain.org>

	* Activities are now "Tasks", to be consistent with WorkflowPatterns
	terminology.
	* Tasks/Choose.py, Tasks/MultiChoice.py: Add support for the
	Deferred Choice pattern.
	* Tasks/AcquireMutex.py, Tasks/ReleaseMutex.py: Add support for Deferred
	Choice and Interleaved Parallel Routing.
	* Tasks/Gate.py: Support the Milestone pattern.
	* Tasks/Task.py: Relaxed constraint checking such that it is now allowed
	to create a task that has no outputs.
	* Tasks/StubTask.py: Removed. (obsolete)

2007-08-30 Samuel Abels <http://debain.org>

	* Activities/Join.py: Add support for (Static|Cancelling|Dynamic) Partial
	Join for Multiple Instances.

2007-08-29 Samuel Abels <http://debain.org>

	* Release 0.0.2

2007-08-29 Samuel Abels <http://debain.org>

	* Activities/Join.py, Activities/Activity.py: Support General Synchronizing
	Merge.
	* Activities/Thread*.py: New, support for ThreadMerge and ThreadSplit
	patterns.

2007-08-27 Samuel Abels <http://debain.org>

	* BranchNode.py, Activities/*.py: Implemented path prediction.

2007-08-26 Samuel Abels <http://debain.org>

	* Activities/Join.py: Replaces Synchronization and Discriminator, now
	newly supporting: Cancelling Partial Join, Blocking Partial Join,
	Structured Partial Join, Cancelling Discriminator, Blocking Discriminator,
	Generalized AND-Join, and Acyclic Synchronizing Merge.
	* Activities/Synchronization.py: Replaced by Join.
	* Activities/Discriminator.py: Replaced by Join.
	* Activities/*.py: Removed the need to call completed_notify in every
	activity.
	* Activities/AddInstance.py: Removed.
	* Activities/Trigger.py: Replaces AddInstance.py.

2007-08-25 Samuel Abels <http://debain.org>

	* BranchNode.py: New tree-based model for branches.
	* Branch.py: Removed in favor of BranchNode.py.
	* Activities/*.py: Replace the old Branch handling by the new branch nodes.
	* Condition.py: New.
	* Activities/*Choice.py, Storage/*.py: Use new condition class to replace
	old condition tuples. This allows comparisons to be made against attributes
	as well as (new) static values.
	* tests/*: Vastly improved all tests. Added an xml/patterns/ directory that
	will hold one test for each workflow pattern.
	* *.py: Lots of cleanups.
	* Activities/AddInstance.py: New, in preparation for the "Multiple Instances
	without a Priori Run-Time Knowledge" pattern. This is yet untested because
	there is no trigger activity yet, so the class is not yet useful.

2007-08-15 Samuel Abels <http://debain.org>

	* Branch.py: Path tracking within branches now works properly.
	* Activities/Synchronization.py: Fixed several bugs with nested
	synchronizations.
	* Activities/*Synchronization.py: Merged the structured synchronization with
	the unstructured one.
	* *.py: Added support for persistence using Python's built in pickle module.
	* *.py: Lots of cleanups.

2007-08-13 Samuel Abels <http://debain.org>

	* Activities/MultiInstance.py: Implement support for Multiple Instance patterns.
	* Job.py (execute_all): Now works through the branches in an ordered and
	predictable way. 

2007-08-05 Samuel Abels <http://debain.org>

	* Trackable.py: Got rid of useless signal/event mechanism.
	* Exception.py, Storage/*.py: Use the StorageException class.
	* *.py: Replace many assertions by more meaningful and descriptive
	exceptions.
	* *.py: Minor API documentation improvements. 

2007-08-03 Samuel Abels <http://debain.org>

	* Initial release 0.0.1
