from ez_setup import use_setuptools
use_setuptools()

from ndg.xacml.core import Identifiers
from ndg.xacml.core.attribute import Attribute
from ndg.xacml.core.attributevalue import (AttributeValue, AttributeValueClassFactory)
from ndg.xacml.core.context.request import Request
from ndg.xacml.core.context.subject import Subject
from ndg.xacml.core.context.resource import Resource
from ndg.xacml.core.context.action import Action
from ndg.xacml.core.context.pdp import PDP
from ndg.xacml.core.policy import Policy
from ndg.xacml.parsers.etree.factory import ReaderFactory
import logging
logging.basicConfig(level=logging.DEBUG)

# Build up PolicyDecisionPoint
PolicyReader = ReaderFactory.getReader(Policy)
policy = PolicyReader.parse("test_policy.xml")
pdp = PDP(policy)

# Build up a test request
request = Request()
request.action = Action()
resource = Resource()
subject = Subject()

# Create a subject attribute.
"""
Attribute that can be created are:

>>  urn:oasis:names:tc:xacml:1.0:data-type:x500Name
>>  urn:oasis:names:tc:xacml:2.0:data-type:dnsName
>>  http://www.w3.org/2001/XMLSchema#string
>>  http://www.w3.org/TR/2002/WD-xquery-operators-20020816#yearMonthDuration
>>  urn:oasis:names:tc:xacml:1.0:data-type:rfc822Name
>>  http://www.w3.org/2001/XMLSchema#integer
>>  http://www.w3.org/2001/XMLSchema#dateTime
>>  http://www.w3.org/2001/XMLSchema#boolean
>>  http://www.w3.org/2001/XMLSchema#anyURI
>>  http://www.w3.org/2001/XMLSchema#base64Binary
>>  http://www.w3.org/2001/XMLSchema#hexBinary
>>  http://www.w3.org/2001/XMLSchema#date
>>  http://www.w3.org/2001/XMLSchema#time
>>  urn:oasis:names:tc:xacml:2.0:data-type:ipAddress
>>  http://www.w3.org/2001/XMLSchema#double
>>  http://www.w3.org/TR/2002/WD-xquery-operators-20020816#dayTimeDuration

"""

# Build up an rfc822Name Attribute which has a value of "hallo@med.example.com"
# We need this later in our evaluation
attributeValueFactory = AttributeValueClassFactory()
AnyUriAttributeValue = attributeValueFactory(AttributeValue.ANY_TYPE_URI)
StringAttributeValue = attributeValueFactory(AttributeValue.STRING_TYPE_URI)

rfc822Name = attributeValueFactory("urn:oasis:names:tc:xacml:1.0:data-type:rfc822Name")
amail = rfc822Name("hallo@med.example.com")

role = attributeValueFactory("http://www.w3.org/2001/XMLSchema#string")
arole = role("administrator")

# Add a subject to the request
attr = Attribute()
attr.attributeId = "urn:oasis:names:tc:xacml:2.0:example:attribute:role"
attr.dataType = role.IDENTIFIER         # = http://www.w3.org/2001/XMLSchema#string
attr.attributeValues.append(arole)

attr2 = Attribute()
attr2.attributeId = "urn:oasis:names:tc:xacml:1.0:subject:subject-id"
attr2.dataType = amail.IDENTIFIER
attr2.attributeValues.append(amail)

subject.attributes.append(attr)
subject.attributes.append(attr2)
request.subjects.append(subject)

# # Add a resource attribute
# resourceAttribute = Attribute()
# resourceAttribute.attributeId = Identifiers.Resource.RESOURCE_ID
# resourceAttribute.dataType = avalue.IDENTIFIER
# resourceAttribute.attributeValues.append(avalue)
# resource.attributes.append(resourceAttribute)
# request.resources.append(resource)


# Create a dummy 'read' action-request for some string value
actionAttribute = Attribute()
actionAttribute.attributeId = Identifiers.Action.ACTION_ID
actionAttribute.dataType = StringAttributeValue.IDENTIFIER
actionAttribute.attributeValues.append(StringAttributeValue())
actionAttribute.attributeValues[-1].value = 'read'
request.action.attributes.append(actionAttribute)


res =  pdp.evaluate(request)
for result in  res.results:
    print result.decision






