#!/bin/sh
### BEGIN INIT INFO
# Provides:          clacks-agent
# Required-Start:    $local_fs $remote_fs $network avahi
# Required-Stop:     $local_fs $remote_fs $network avahi
# Should-Start:	     $syslog qpidd
# Should-Stop:       $syslog qpidd
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: clacks-agent service
# Description:       TODO
### END INIT INFO

set -e

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="clacks infrastructure"
SERVICE=agent
SCRIPTNAME=/etc/init.d/clacks-$SERVICE


start_service() {
        [ -x /usr/sbin/clacks-$SERVICE ] || continue
        PIDFILE=/var/run/clacks/$SERVICE.pid
        PID=$(pgrep clacks-$SERVICE)

        if [ -e $PIDFILE ]; then
            if [ "x$PID" = "x$(cat $PIDFILE)" ]; then
                log_progress_msg "already running"
                return
            fi
        fi
        start-stop-daemon --start --quiet --pidfile $PIDFILE \
            --exec /usr/sbin/clacks-$SERVICE -- --pid-file $PIDFILE
}


stop_service() {
       [ -x /usr/sbin/clacks-$SERVICE ] || continue
       PIDFILE=/var/run/clacks/$SERVICE.pid
       start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile $PIDFILE
}


# Gracefully exit if the package has been removed.
test -x /usr/sbin/clacks-$SERVICE || exit 0

. /lib/lsb/init-functions

# Include clacks defaults if available.
test -f /etc/default/clacks-$SERVICE && . /etc/default/clacks-$SERVICE

if [ ! -d /var/run/clacks ]; then
    mkdir -p /var/run/clacks
    chown root:clacks /var/run/clacks
    chmod 770 /var/run/clacks
fi

case "$1" in
    start)
        # If we've no configuration now, stop more or less silently
        if [ ! -e /etc/clacks/config ]; then
            echo ""
            echo "clacks-agent is not configured, please create /etc/clacks/config to enable"
            exit 0
        fi

        log_daemon_msg "Starting $DESC"
        log_progress_msg "$SERVICE"
        start_service
        log_end_msg $?
        ;;

    stop)
        log_daemon_msg "Stopping $DESC"
        stop_service
        log_progress_msg "$SERVICE"
        log_end_msg $?
        ;;

    restart|force-reload)
        log_daemon_msg "Restarting $DESC"
        log_progress_msg "$SERVICE"
        stop_service
        start_service
        log_end_msg $?
        ;;

    *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
